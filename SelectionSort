import java.util.Arrays;
import java.util.Scanner;

public class Main8 {
	public static void main (String [] args) {
		double [] temp = {2.0, 5.0, 1.0};
		
	selectionSort(temp);
	
	System.out.println(Arrays.toString(temp));
	
	}
	public static void selectionSort(double [] list) {
		//Chooses the element to prepare for comparison
		for (int i = 0; i < list.length -1; i++) {
			double currentMinElement = list[i];
			
			int currentMinIndex = i;
			//Next element 
		for(int j = i + 1; j < list.length; j++) {
			if (currentMinElement > list[j]) {
				currentMinElement = list[j]; 
				currentMinIndex = j; 
			}
		}
		//Swap begins if there is a minimum value found.
		if (currentMinIndex != i) {
			list[currentMinIndex] = list[i];
			list[i] = currentMinElement;
		}
		}
	}
}
/*Key Takeaways: This algorithm (SelectionSort) involves a nested for loop. The goal is to compare the first element with the next. If the element chosen is found to 
 * be less than the element right after, the swap in the array begins. This continues until the value of the outer loop coresponds to the second-to-last element 
 * of the array. This will achieve an ordered array (ascending order). Alternatively, you can you java libraries and invoke the sort() method -> Arrays.sort();.
*/
